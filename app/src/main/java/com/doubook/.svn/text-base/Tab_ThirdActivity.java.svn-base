package com.doubook;

import java.util.Timer;
import java.util.TimerTask;

import android.content.DialogInterface;
import android.content.Intent;
import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.doubook.base.BaseActivty;
import com.doubook.thread.ExecutorProcessPool;
import com.doubook.utiltools.FileCache;
import com.doubook.utiltools.PreferencesUtils;
import com.doubook.view.CircularImage;
import com.doubook.view.CustomDialog;
import com.squareup.picasso.Picasso;

public class Tab_ThirdActivity extends BaseActivty {
	private CustomDialog.Builder newbuilder;
	private LinearLayout lin_lxw, lin_exit, lin_zd, lin_dg, lin_xd, lin_fk, lin_about;
	private CircularImage user_photo;
	private TextView username, txt_zd, txt_dg, txt_xd, txt_hc;
	private Intent mIntent;
	private Handler mHandler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			// TODO Auto-generated method stub
			super.handleMessage(msg);
			if (msg.what == 1) {
				Picasso.with(ct).load(PreferencesUtils.getString(Tab_ThirdActivity.this, "imageSrc", "")).into(user_photo);
				username.setText(PreferencesUtils.getString(Tab_ThirdActivity.this, "userName", ""));
				txt_zd.setText(PreferencesUtils.getString(Tab_ThirdActivity.this, "reading", ""));
				txt_dg.setText(PreferencesUtils.getString(Tab_ThirdActivity.this, "read", ""));
				txt_xd.setText(PreferencesUtils.getString(Tab_ThirdActivity.this, "wish", ""));
				initDataListener();
			}
		}
	};
	@Override
	protected void initView() {
		// TODO Auto-generated method stub
		setContentView(R.layout.activity_first_tab3);
		
	}

	@Override
	protected void initData() {
		// TODO Auto-generated method stub
		PreferencesUtils.PREFERENCE_NAME = this.getPackageName();
		lin_exit = (LinearLayout) findViewById(R.id.lin_exit);
		lin_lxw = (LinearLayout) findViewById(R.id.lin_lxw);
		user_photo = (CircularImage) findViewById(R.id.user_photo);
		username = (TextView) findViewById(R.id.username);
		txt_zd = (TextView) findViewById(R.id.txt_zd);
		txt_dg = (TextView) findViewById(R.id.txt_dg);
		txt_xd = (TextView) findViewById(R.id.txt_xd);

		lin_zd = (LinearLayout) findViewById(R.id.lin_zd);
		lin_dg = (LinearLayout) findViewById(R.id.lin_dg);
		lin_xd = (LinearLayout) findViewById(R.id.lin_xd);

		lin_lxw = (LinearLayout) findViewById(R.id.lin_lxw);
		lin_fk = (LinearLayout) findViewById(R.id.lin_fk);

		txt_hc = (TextView) findViewById(R.id.txt_hc);
		FileCache fileCache = new FileCache(this);

		txt_hc.setText(fileCache.getCacheSize());

		lin_about = (LinearLayout) findViewById(R.id.lin_about);
		
		initUserData();
	}

	@Override
	protected void processClick(View v) {
		lin_lxw.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent mIntent = new Intent(Tab_ThirdActivity.this, Tab3_lxw_Activity.class);
				startActivity(mIntent);
			}
		});
		lin_fk.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent mIntent = new Intent(Tab_ThirdActivity.this, Tab3_FKActivity.class);
				startActivity(mIntent);
			}
		});
		lin_about.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				// TODO Auto-generated method stub
				Intent mIntent = new Intent(Tab_ThirdActivity.this, Tab3_AboutActivity.class);
				startActivity(mIntent);
			}
		});
	}

	private void initDataListener() {
		if ("立即登录".equals(username.getText())) {
			username.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					Intent mIntent = new Intent(Tab_ThirdActivity.this, LoginActivity.class);
					startActivity(mIntent);
				}
			});
		}
		lin_exit.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				newbuilder = new CustomDialog.Builder(Tab_ThirdActivity.this);
				View textEntryView = LayoutInflater.from(Tab_ThirdActivity.this).inflate(R.layout.dialog_normal_button_two, null);
				newbuilder.setTitle("是否要退出当前登录账号?");
				newbuilder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						PreferencesUtils.putString(Tab_ThirdActivity.this, "access_token", "");
						PreferencesUtils.putString(Tab_ThirdActivity.this, "refresh_token", "");
						Intent mIntent = new Intent(Tab_ThirdActivity.this, FirstActivity.class);
						finish();
						startActivity(mIntent);
					}
				});
				newbuilder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
					public void onClick(DialogInterface dialog, int whichButton) {
						dialog.dismiss();
					}
				});
				newbuilder.create(textEntryView).show();

			}
		});
		lin_zd.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				sendBroadInfo(1);
			}
		});
		lin_xd.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				sendBroadInfo(0);
			}
		});
		lin_dg.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				sendBroadInfo(2);
			}
		});
	}

	private void sendBroadInfo(int tab) {
		if (mIntent == null) {
			mIntent = new Intent();
		}
		mIntent.setAction("com.doubook.mytab");
		// 要发送的内容
		mIntent.putExtra("tab", tab);
		// 发送 一个无序广播
		sendBroadcast(mIntent);
	}

	private void initUserData() {
		if ("".equals(PreferencesUtils.getString(Tab_ThirdActivity.this, "access_token", ""))) {
			username.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					Intent mIntent = new Intent(Tab_ThirdActivity.this, LoginActivity.class);
					startActivity(mIntent);
				}
			});
			return;
		} else {
			if (PreferencesUtils.getString(Tab_ThirdActivity.this, "reading", "").equals("")) {
				mHandler.sendEmptyMessageDelayed(1, 600);
				return;
			}
			mHandler.sendEmptyMessage(1);
		}
	}

	@Override
	protected void onResume() {
		// TODO Auto-generated method stub
		super.onResume();
		if (PreferencesUtils.getString(Tab_ThirdActivity.this, "reading", "").equals("")) {
			mHandler.sendEmptyMessageDelayed(1, 300);
		}
	}
	
	@Override
	public void onBackPressed() {
		// TODO Auto-generated method stub
		exitBy2Click();
	}

	/**
	 * 双击退出函数
	 */
	private static Boolean isExit = false;

	private void exitBy2Click() {
		Timer tExit = null;
		if (isExit == false) {
			isExit = true; // 准备退出
			Toast.makeText(this, "再按一次退出程序", Toast.LENGTH_SHORT).show();
			tExit = new Timer();
			tExit.schedule(new TimerTask() {
				@Override
				public void run() {
					isExit = false; // 取消退出
				}
			}, 2000); // 如果2秒钟内没有按下返回键，则启动定时器取消掉刚才执行的任务
		} else {
			AppManager.getAppManager().AppExit(this);
//			ExecutorProcessPool.getInstance().shutdown();
		}
	}

	

}
